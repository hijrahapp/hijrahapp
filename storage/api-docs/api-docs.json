{
    "openapi": "3.0.0",
    "info": {
        "title": "Hijrah App API",
        "description": "Complete API documentation for Hijrah App - A comprehensive assessment and program management system",
        "version": "1.0.0"
    },
    "paths": {
        "/api/auth/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User registration",
                "description": "Register a new user account",
                "operationId": "userSignup",
                "requestBody": {
                    "description": "User registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "gender",
                                    "birthdate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully, verification required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please verify your account."
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user with email and password",
                "operationId": "userLogin",
                "requestBody": {
                    "description": "User login credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/login/firebase": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Firebase login",
                "description": "Authenticate user using Firebase ID token",
                "operationId": "firebaseLogin",
                "requestBody": {
                    "description": "Firebase authentication data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firebase_token"
                                ],
                                "properties": {
                                    "firebase_token": {
                                        "type": "string",
                                        "example": "firebase_id_token_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Firebase login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Firebase token"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/login/google": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Google OAuth login",
                "description": "Authenticate user using Google OAuth access token",
                "operationId": "googleLogin",
                "requestBody": {
                    "description": "Google OAuth data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "access_token"
                                ],
                                "properties": {
                                    "access_token": {
                                        "type": "string",
                                        "example": "google_access_token_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Google login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid Google token"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/auth/signup/complete": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Complete user registration",
                "description": "Complete user registration after initial signup",
                "operationId": "completeSignup",
                "requestBody": {
                    "description": "Additional registration data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "additional_info": {
                                        "type": "string",
                                        "example": "Any additional information"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration completed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/otp/verify": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "description": "Verify OTP code for account verification",
                "operationId": "verifyOTP",
                "requestBody": {
                    "description": "OTP verification data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp"
                                ],
                                "properties": {
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account verified successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/otp/resend": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP",
                "description": "Resend OTP code for account verification",
                "operationId": "resendOTP",
                "responses": {
                    "200": {
                        "description": "OTP resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/password/forget": {
            "post": {
                "tags": [
                    "Password Management"
                ],
                "summary": "Request password reset",
                "description": "Send OTP email for password reset",
                "operationId": "forgetPassword",
                "requestBody": {
                    "description": "Email for password reset",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful OTP email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reset code sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/password/otp/verify": {
            "post": {
                "tags": [
                    "Password Management"
                ],
                "summary": "Verify password reset OTP",
                "description": "Verify OTP code for password reset",
                "operationId": "verifyPasswordOTP",
                "requestBody": {
                    "description": "Email and OTP for verification",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired OTP"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Password Management"
                ],
                "summary": "Reset password",
                "description": "Set new password after OTP verification",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "New password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "post": {
                "tags": [
                    "User Management"
                ],
                "summary": "Create new user",
                "description": "Create a new user account (Admin only)",
                "operationId": "createUser",
                "requestBody": {
                    "description": "User creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "role",
                                    "gender",
                                    "birthdate"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "SuperAdmin",
                                            "Admin",
                                            "Expert",
                                            "Customer"
                                        ],
                                        "example": "Customer"
                                    },
                                    "gender": {
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "birthdate": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient permissions (Admin role required)"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User Management"
                ],
                "summary": "Delete user",
                "description": "Delete a user account (SuperAdmin only)",
                "operationId": "deleteUser",
                "requestBody": {
                    "description": "User deletion data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Account termination requested by user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient permissions (SuperAdmin role required)"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/all": {
            "get": {
                "tags": [
                    "User Management"
                ],
                "summary": "Get all users",
                "description": "Retrieve a list of all users (Admin only)",
                "operationId": "getAllUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by user role",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "SuperAdmin",
                                "Admin",
                                "Expert",
                                "Customer"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    },
                                                    "role": {
                                                        "type": "string",
                                                        "example": "Customer"
                                                    },
                                                    "gender": {
                                                        "type": "string",
                                                        "example": "male"
                                                    },
                                                    "birthdate": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "1990-01-01"
                                                    },
                                                    "is_verified": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_users": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Insufficient permissions (Admin role required)"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/all": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get all programs",
                "description": "Retrieve a list of all programs",
                "operationId": "getAllPrograms",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Sample Program"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Program description"
                                            },
                                            "definition": {
                                                "type": "string",
                                                "example": "Program definition"
                                            },
                                            "objectives": {
                                                "type": "string",
                                                "example": "Program objectives"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get program details",
                "description": "Retrieve detailed information about a specific program including linked modules",
                "operationId": "getProgram",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Sample Program"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Program description"
                                        },
                                        "definition": {
                                            "type": "string",
                                            "example": "Program definition"
                                        },
                                        "objectives": {
                                            "type": "string",
                                            "example": "Program objectives"
                                        },
                                        "modules": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Module Name"
                                                    },
                                                    "methodology_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pillar_id": {
                                                        "type": "integer",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "min_score": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 25.5
                                                    },
                                                    "max_score": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 85.75
                                                    },
                                                    "linked_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "modules_count": {
                                            "type": "integer",
                                            "example": 3
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Program not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Programs"
                ],
                "summary": "Update program (Admin only)",
                "description": "Update an existing program. Requires Admin role.",
                "operationId": "updateProgram",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Program data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Program Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated program description"
                                    },
                                    "definition": {
                                        "type": "string",
                                        "example": "Updated program definition"
                                    },
                                    "objectives": {
                                        "type": "string",
                                        "example": "Updated program objectives"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Program updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Updated Program Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Updated program description"
                                        },
                                        "definition": {
                                            "type": "string",
                                            "example": "Updated program definition"
                                        },
                                        "objectives": {
                                            "type": "string",
                                            "example": "Updated program objectives"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "404": {
                        "description": "Program not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Programs"
                ],
                "summary": "Delete program (Admin only)",
                "description": "Delete a program and all its associated data. Requires Admin role.",
                "operationId": "deleteProgram",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Program deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Program deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "404": {
                        "description": "Program not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs": {
            "post": {
                "tags": [
                    "Programs"
                ],
                "summary": "Create a new program (Admin only)",
                "description": "Create a new program with basic information. Requires Admin role.",
                "operationId": "createProgram",
                "requestBody": {
                    "description": "Program data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "definition",
                                    "objectives"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Program"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Detailed program description"
                                    },
                                    "definition": {
                                        "type": "string",
                                        "example": "Program definition and scope"
                                    },
                                    "objectives": {
                                        "type": "string",
                                        "example": "Program learning objectives"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Program created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "New Program"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Detailed program description"
                                        },
                                        "definition": {
                                            "type": "string",
                                            "example": "Program definition and scope"
                                        },
                                        "objectives": {
                                            "type": "string",
                                            "example": "Program learning objectives"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/modules/attach": {
            "post": {
                "tags": [
                    "Programs"
                ],
                "summary": "Attach module to program (Admin only)",
                "description": "Link a module to a program with score configuration. Requires Admin role.",
                "operationId": "attachModuleToProgram",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Module attachment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id",
                                    "methodology_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "methodology_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pillar_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    },
                                    "min_score": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 25.5
                                    },
                                    "max_score": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 85.75
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module attached successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module attached successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Relationship already exists or program not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/modules/detach": {
            "delete": {
                "tags": [
                    "Programs"
                ],
                "summary": "Detach module from program (Admin only)",
                "description": "Remove a module link from a program. Requires Admin role.",
                "operationId": "detachModuleFromProgram",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Module detachment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id",
                                    "methodology_id"
                                ],
                                "properties": {
                                    "module_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "methodology_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pillar_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module detached successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module detached successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Program or module relationship not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/modules/scores": {
            "put": {
                "tags": [
                    "Programs"
                ],
                "summary": "Update module score configuration (Admin only)",
                "description": "Update the minimum and maximum score configuration for a module linked to a program. Requires Admin role.",
                "operationId": "updateModuleScores",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Module score update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "module_id",
                                    "methodology_id",
                                    "min_score",
                                    "max_score"
                                ],
                                "properties": {
                                    "module_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "methodology_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "pillar_id": {
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    },
                                    "min_score": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 30
                                    },
                                    "max_score": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 90
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Module scores updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module scores updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Program not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/methodology/{methodologyId}/available-modules": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get available modules for a methodology",
                "description": "Retrieve all modules available for linking to programs within a specific methodology",
                "operationId": "getAvailableModules",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Module Name"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Module description"
                                                    },
                                                    "methodology_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pillar_id": {
                                                        "type": "integer",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "pillar_name": {
                                                        "type": "string",
                                                        "example": "Pillar Name",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/methodology/{methodologyId}": {
            "get": {
                "tags": [
                    "Programs"
                ],
                "summary": "Get program with methodology-specific modules",
                "description": "Retrieve detailed program information with modules linked to a specific methodology",
                "operationId": "getProgramWithMethodologyModules",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Sample Program"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Program description"
                                        },
                                        "definition": {
                                            "type": "string",
                                            "example": "Program definition"
                                        },
                                        "objectives": {
                                            "type": "string",
                                            "example": "Program objectives"
                                        },
                                        "modules": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Module Name"
                                                    },
                                                    "methodology_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pillar_id": {
                                                        "type": "integer",
                                                        "example": null,
                                                        "nullable": true
                                                    },
                                                    "min_score": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 25.5
                                                    },
                                                    "max_score": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 85.75
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Program not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/objectives": {
            "get": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Get program objectives",
                "description": "Retrieve all objectives for a specific program",
                "operationId": "getProgramObjectives",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Objective"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Create objective (Admin only)",
                "description": "Create a new objective for a program. Requires Admin role.",
                "operationId": "createObjective",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Objective data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateObjectiveRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Objective created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Objective"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/objectives/{objectiveId}": {
            "get": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Get objective details",
                "description": "Retrieve detailed information about a specific objective",
                "operationId": "getObjective",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "objectiveId",
                        "in": "path",
                        "description": "Objective ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ObjectiveDetailed"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Objective not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Update objective (Admin only)",
                "description": "Update an existing objective. Requires Admin role.",
                "operationId": "updateObjective",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "objectiveId",
                        "in": "path",
                        "description": "Objective ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Objective data to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateObjectiveRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Objective updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Objective"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "404": {
                        "description": "Objective not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Delete objective (Admin only)",
                "description": "Delete an objective from a program. Requires Admin role.",
                "operationId": "deleteObjective",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "objectiveId",
                        "in": "path",
                        "description": "Objective ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Objective deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SuccessResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Objective not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/objectives/{objectiveId}/duplicate": {
            "post": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Duplicate objective (Admin only)",
                "description": "Create a copy of an existing objective. Requires Admin role.",
                "operationId": "duplicateObjective",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "objectiveId",
                        "in": "path",
                        "description": "Objective ID to duplicate",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Optional target program ID for the duplicate",
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "program_id": {
                                        "description": "Target program ID (optional)",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Objective duplicated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Objective"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "404": {
                        "description": "Objective not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/programs/{programId}/objectives/reorder": {
            "put": {
                "tags": [
                    "Objectives"
                ],
                "summary": "Reorder objectives (Admin only)",
                "description": "Change the order of objectives within a program. Requires Admin role.",
                "operationId": "reorderObjectives",
                "parameters": [
                    {
                        "name": "programId",
                        "in": "path",
                        "description": "Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "New order of objectives",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReorderObjectivesRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Objectives reordered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Objectives reordered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden - Admin role required"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/all": {
            "get": {
                "tags": [
                    "Methodologies"
                ],
                "summary": "Get all methodologies",
                "description": "Retrieve a list of all active methodologies",
                "operationId": "getAllMethodologies",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Methodology Name"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Methodology description"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "standard"
                                            },
                                            "imgUrl": {
                                                "type": "string",
                                                "nullable": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}": {
            "get": {
                "tags": [
                    "Methodologies"
                ],
                "summary": "Get methodology details",
                "description": "Retrieve detailed information about a specific methodology",
                "operationId": "getMethodology",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Methodology Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Detailed methodology description"
                                        },
                                        "definition": {
                                            "type": "string",
                                            "example": "Methodology definition"
                                        },
                                        "objectives": {
                                            "type": "string",
                                            "example": "Methodology objectives"
                                        },
                                        "type": {
                                            "type": "string",
                                            "example": "standard"
                                        },
                                        "imgUrl": {
                                            "type": "string",
                                            "nullable": true
                                        },
                                        "pillars": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "modules": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/section/{sectionNumber}": {
            "get": {
                "tags": [
                    "Methodologies"
                ],
                "summary": "Get methodology by section",
                "description": "Retrieve methodology information for a specific section (for two-section methodologies)",
                "operationId": "getMethodologyBySection",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "sectionNumber",
                        "in": "path",
                        "description": "Section number (1 or 2)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Methodology Name"
                                        },
                                        "section": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "pillars": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "modules": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or section not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/pillar/{pillarId}": {
            "get": {
                "tags": [
                    "Methodologies"
                ],
                "summary": "Get pillar details",
                "description": "Retrieve detailed information about a specific pillar within a methodology",
                "operationId": "getPillar",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Pillar Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Pillar description"
                                        },
                                        "modules": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or pillar not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/module/{moduleId}": {
            "get": {
                "tags": [
                    "Methodologies"
                ],
                "summary": "Get module details",
                "description": "Retrieve detailed information about a specific module within a methodology",
                "operationId": "getModule",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Module Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Module description"
                                        },
                                        "definition": {
                                            "type": "string",
                                            "example": "Module definition"
                                        },
                                        "objectives": {
                                            "type": "string",
                                            "example": "Module objectives"
                                        },
                                        "imgUrl": {
                                            "type": "string",
                                            "nullable": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or module not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/pillar/{pillarId}/module/{moduleId}": {
            "get": {
                "tags": [
                    "Methodologies"
                ],
                "summary": "Get pillar module details",
                "description": "Retrieve detailed information about a specific module within a pillar and methodology",
                "operationId": "getPillarModule",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Module Name"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Module description"
                                        },
                                        "pillar_context": {
                                            "type": "string",
                                            "example": "Pillar-specific context"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology, pillar, or module not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get methodology questions",
                "description": "Retrieve all questions for a specific methodology",
                "operationId": "getMethodologyQuestions",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "What is your assessment of...?"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "multiple_choice"
                                            },
                                            "answers": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer"
                                                        },
                                                        "text": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "order": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/pillar/{pillarId}/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get pillar questions",
                "description": "Retrieve all questions for a specific pillar within a methodology",
                "operationId": "getPillarQuestions",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "Pillar-specific question text"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "multiple_choice"
                                            },
                                            "answers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            },
                                            "pillar_context": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or pillar not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/module/{moduleId}/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get module questions",
                "description": "Retrieve all questions for a specific module within a methodology",
                "operationId": "getModuleQuestions",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "Module-specific question text"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "multiple_choice"
                                            },
                                            "answers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            },
                                            "module_context": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or module not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/pillar/{pillarId}/module/{moduleId}/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "Get pillar module questions",
                "description": "Retrieve all questions for a specific module within a pillar and methodology",
                "operationId": "getPillarModuleQuestions",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "text": {
                                                "type": "string",
                                                "example": "Pillar module question text"
                                            },
                                            "type": {
                                                "type": "string",
                                                "example": "multiple_choice"
                                            },
                                            "answers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object"
                                                }
                                            },
                                            "pillar_context": {
                                                "type": "string"
                                            },
                                            "module_context": {
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology, pillar, or module not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/answers": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Get methodology answers",
                "description": "Retrieve user answers for a methodology assessment",
                "operationId": "getMethodologyAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "methodology_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 85.5
                                        },
                                        "completion_percentage": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 100
                                        },
                                        "answers": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "question_id": {
                                                        "type": "integer"
                                                    },
                                                    "answer_id": {
                                                        "type": "integer"
                                                    },
                                                    "value": {
                                                        "type": "integer"
                                                    },
                                                    "submitted_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "submitted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology not found or no answers submitted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Submit methodology answers",
                "description": "Submit user answers for a methodology assessment",
                "operationId": "submitMethodologyAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "User answers data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "answers"
                                ],
                                "properties": {
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "answer_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "value": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Answers submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Answers submitted successfully"
                                        },
                                        "score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 85.5
                                        },
                                        "total_questions": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "answered_questions": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/pillar/{pillarId}/answers": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Get pillar answers",
                "description": "Retrieve user answers for a pillar assessment",
                "operationId": "getPillarAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pillar_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "methodology_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "pillar_score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 78.5
                                        },
                                        "answers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "submitted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology, pillar not found or no answers submitted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Submit pillar answers",
                "description": "Submit user answers for a pillar assessment",
                "operationId": "submitPillarAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "User answers data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "answers"
                                ],
                                "properties": {
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "question_id": {
                                                    "type": "integer"
                                                },
                                                "answer_id": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pillar answers submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pillar answers submitted successfully"
                                        },
                                        "pillar_score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 78.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or pillar not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/module/{moduleId}/answers": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Get module answers",
                "description": "Retrieve user answers for a module assessment",
                "operationId": "getModuleAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "module_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "methodology_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "module_score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 92
                                        },
                                        "answers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "submitted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology, module not found or no answers submitted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Submit module answers",
                "description": "Submit user answers for a module assessment",
                "operationId": "submitModuleAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "User answers data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "answers"
                                ],
                                "properties": {
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "question_id": {
                                                    "type": "integer"
                                                },
                                                "answer_id": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Module answers submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Module answers submitted successfully"
                                        },
                                        "module_score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 92
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology or module not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/methodology/{methodologyId}/pillar/{pillarId}/module/{moduleId}/answers": {
            "get": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Get pillar module answers",
                "description": "Retrieve user answers for a module within a pillar assessment",
                "operationId": "getPillarModuleAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "module_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "pillar_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "methodology_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "module_score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 88.5
                                        },
                                        "answers": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "submitted_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology, pillar, module not found or no answers submitted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User Answers"
                ],
                "summary": "Submit pillar module answers",
                "description": "Submit user answers for a module within a pillar assessment",
                "operationId": "submitPillarModuleAnswers",
                "parameters": [
                    {
                        "name": "methodologyId",
                        "in": "path",
                        "description": "Methodology ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "pillarId",
                        "in": "path",
                        "description": "Pillar ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "moduleId",
                        "in": "path",
                        "description": "Module ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "User answers data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "answers"
                                ],
                                "properties": {
                                    "answers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "question_id": {
                                                    "type": "integer"
                                                },
                                                "answer_id": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Pillar module answers submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Pillar module answers submitted successfully"
                                        },
                                        "module_score": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 88.5
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Methodology, pillar, or module not found"
                    },
                    "422": {
                        "description": "Validation failed"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date",
                        "example": "2000-01-01"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "SuperAdmin",
                            "Admin",
                            "Expert",
                            "Customer"
                        ],
                        "example": "Customer"
                    },
                    "profilePhoto": {
                        "type": "string",
                        "example": "localhost:8000/assets/media/avatars/blank.png"
                    }
                },
                "type": "object"
            },
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "description": "API Schemas for Hijrah App\n\nThis file contains all OpenAPI schema definitions for requests and responses\nused throughout the Hijrah App API documentation.\n\n// ==================== COMMON SCHEMAS ====================",
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Error message"
                    },
                    "error": {
                        "type": "string",
                        "example": "Detailed error information"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string",
                        "example": "Validation failed"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_pages": {
                        "type": "integer",
                        "example": 5
                    },
                    "total_items": {
                        "type": "integer",
                        "example": 100
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 20
                    }
                },
                "type": "object"
            },
            "UserList": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "pagination": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "SignupRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "gender",
                    "birthdate"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    }
                },
                "type": "object"
            },
            "FirebaseLoginRequest": {
                "required": [
                    "firebase_token"
                ],
                "properties": {
                    "firebase_token": {
                        "type": "string",
                        "example": "firebase_id_token_here"
                    }
                },
                "type": "object"
            },
            "GoogleLoginRequest": {
                "required": [
                    "access_token"
                ],
                "properties": {
                    "access_token": {
                        "type": "string",
                        "example": "google_access_token_here"
                    }
                },
                "type": "object"
            },
            "OTPVerifyRequest": {
                "required": [
                    "otp"
                ],
                "properties": {
                    "otp": {
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "CompleteSignupRequest": {
                "properties": {
                    "additional_info": {
                        "type": "string",
                        "example": "Any additional information"
                    }
                },
                "type": "object"
            },
            "AuthResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "access_token": {
                        "type": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9..."
                    },
                    "token_type": {
                        "type": "string",
                        "example": "bearer"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "SignupResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Registration successful. Please verify your account."
                    },
                    "access_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string",
                        "example": "bearer"
                    }
                },
                "type": "object"
            },
            "ForgetPasswordRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    }
                },
                "type": "object"
            },
            "PasswordOTPRequest": {
                "required": [
                    "email",
                    "otp"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "user@example.com"
                    },
                    "otp": {
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object"
            },
            "ResetPasswordRequest": {
                "required": [
                    "password"
                ],
                "properties": {
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword123"
                    }
                },
                "type": "object"
            },
            "CreateUserRequest": {
                "required": [
                    "name",
                    "email",
                    "password",
                    "role",
                    "gender",
                    "birthdate"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "SuperAdmin",
                            "Admin",
                            "Expert",
                            "Customer"
                        ],
                        "example": "Customer"
                    },
                    "gender": {
                        "type": "string",
                        "enum": [
                            "male",
                            "female"
                        ],
                        "example": "male"
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-01"
                    }
                },
                "type": "object"
            },
            "DeleteUserRequest": {
                "required": [
                    "user_id"
                ],
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "reason": {
                        "type": "string",
                        "example": "Account termination requested by user"
                    }
                },
                "type": "object"
            },
            "CreateUserResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "User created successfully"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            },
            "Methodology": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Digital Transformation Methodology"
                    },
                    "description": {
                        "type": "string",
                        "example": "Comprehensive digital transformation assessment"
                    },
                    "definition": {
                        "type": "string",
                        "example": "A structured approach to evaluating digital maturity"
                    },
                    "objectives": {
                        "type": "string",
                        "example": "Assess current state and identify improvement opportunities"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "standard",
                            "twoSection"
                        ],
                        "example": "standard"
                    },
                    "imgUrl": {
                        "type": "string",
                        "example": "https://example.com/methodology.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "MethodologyDetailed": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Methodology"
                    },
                    {
                        "properties": {
                            "pillars": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Pillar"
                                }
                            },
                            "modules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Pillar": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Technology Infrastructure"
                    },
                    "description": {
                        "type": "string",
                        "example": "Assessment of current technology infrastructure"
                    },
                    "section": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "PillarDetailed": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pillar"
                    },
                    {
                        "properties": {
                            "modules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Module"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Module": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Cloud Infrastructure"
                    },
                    "description": {
                        "type": "string",
                        "example": "Cloud infrastructure assessment module"
                    },
                    "definition": {
                        "type": "string",
                        "example": "Evaluates cloud adoption and management capabilities"
                    },
                    "objectives": {
                        "type": "string",
                        "example": "Assess cloud readiness and optimization opportunities"
                    },
                    "imgUrl": {
                        "type": "string",
                        "example": "https://example.com/module.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Program": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Digital Excellence Program"
                    },
                    "description": {
                        "type": "string",
                        "example": "Comprehensive digital transformation program"
                    },
                    "definition": {
                        "type": "string",
                        "example": "A structured learning and assessment program"
                    },
                    "objectives": {
                        "type": "string",
                        "example": "Develop digital capabilities and assess progress"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProgramDetailed": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Program"
                    },
                    {
                        "properties": {
                            "objectives": {
                                "description": "Program objectives as structured data",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Objective"
                                }
                            },
                            "objectives_count": {
                                "type": "integer",
                                "example": 8
                            },
                            "objectives_count_by_type": {
                                "description": "Count of objectives grouped by type",
                                "properties": {
                                    "journal": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "article": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "advice": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "daily_mission": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quiz": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "video": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "audio": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "book": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "challenge": {
                                        "type": "integer",
                                        "example": 0
                                    }
                                },
                                "type": "object"
                            },
                            "modules": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LinkedModule"
                                }
                            },
                            "modules_count": {
                                "type": "integer",
                                "example": 5
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "LinkedModule": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Module"
                    },
                    {
                        "properties": {
                            "methodology_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "pillar_id": {
                                "type": "integer",
                                "example": 2,
                                "nullable": true
                            },
                            "min_score": {
                                "type": "number",
                                "format": "float",
                                "example": 25.5
                            },
                            "max_score": {
                                "type": "number",
                                "format": "float",
                                "example": 85.75
                            },
                            "linked_at": {
                                "type": "string",
                                "format": "date-time"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "AvailableModule": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Module"
                    },
                    {
                        "properties": {
                            "methodology_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "pillar_id": {
                                "type": "integer",
                                "example": 2,
                                "nullable": true
                            },
                            "pillar_name": {
                                "type": "string",
                                "example": "Technology Infrastructure",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateProgramRequest": {
                "required": [
                    "name",
                    "description",
                    "definition",
                    "objectives"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "New Program"
                    },
                    "description": {
                        "type": "string",
                        "example": "Detailed program description"
                    },
                    "definition": {
                        "type": "string",
                        "example": "Program definition and scope"
                    },
                    "objectives": {
                        "type": "string",
                        "example": "Program learning objectives"
                    }
                },
                "type": "object"
            },
            "AttachModuleRequest": {
                "required": [
                    "module_id",
                    "methodology_id"
                ],
                "properties": {
                    "module_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "methodology_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pillar_id": {
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "min_score": {
                        "type": "number",
                        "format": "float",
                        "example": 25.5
                    },
                    "max_score": {
                        "type": "number",
                        "format": "float",
                        "example": 85.75
                    }
                },
                "type": "object"
            },
            "DetachModuleRequest": {
                "required": [
                    "module_id",
                    "methodology_id"
                ],
                "properties": {
                    "module_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "methodology_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pillar_id": {
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateModuleScoresRequest": {
                "required": [
                    "module_id",
                    "methodology_id",
                    "min_score",
                    "max_score"
                ],
                "properties": {
                    "module_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "methodology_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pillar_id": {
                        "type": "integer",
                        "example": 2,
                        "nullable": true
                    },
                    "min_score": {
                        "type": "number",
                        "format": "float",
                        "example": 30
                    },
                    "max_score": {
                        "type": "number",
                        "format": "float",
                        "example": 90
                    }
                },
                "type": "object"
            },
            "AvailableModulesResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvailableModule"
                        }
                    }
                },
                "type": "object"
            },
            "Question": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "text": {
                        "type": "string",
                        "example": "How would you rate your current cloud infrastructure?"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "multiple_choice",
                            "rating",
                            "text"
                        ],
                        "example": "multiple_choice"
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Answer"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Answer": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "text": {
                        "type": "string",
                        "example": "Excellent"
                    },
                    "value": {
                        "type": "integer",
                        "example": 5
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "SubmitAnswersRequest": {
                "required": [
                    "answers"
                ],
                "properties": {
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAnswerSubmission"
                        }
                    }
                },
                "type": "object"
            },
            "UserAnswerSubmission": {
                "required": [
                    "question_id",
                    "answer_id"
                ],
                "properties": {
                    "question_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "answer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "value": {
                        "type": "integer",
                        "example": 5
                    }
                },
                "type": "object"
            },
            "SubmitAnswersResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Answers submitted successfully"
                    },
                    "score": {
                        "type": "number",
                        "format": "float",
                        "example": 85.5
                    },
                    "total_questions": {
                        "type": "integer",
                        "example": 10
                    },
                    "answered_questions": {
                        "type": "integer",
                        "example": 10
                    }
                },
                "type": "object"
            },
            "UserAnswer": {
                "properties": {
                    "question_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "answer_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "value": {
                        "type": "integer",
                        "example": 5
                    },
                    "question_text": {
                        "type": "string",
                        "example": "How would you rate...?"
                    },
                    "answer_text": {
                        "type": "string",
                        "example": "Excellent"
                    },
                    "submitted_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "UserAnswersResponse": {
                "properties": {
                    "methodology_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "pillar_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "module_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "score": {
                        "type": "number",
                        "format": "float",
                        "example": 85.5
                    },
                    "completion_percentage": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserAnswer"
                        }
                    },
                    "submitted_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Objective": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "program_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "program_name": {
                        "type": "string",
                        "example": "Digital Transformation Program"
                    },
                    "name": {
                        "type": "string",
                        "example": "Complete Module Assessment"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "journal",
                            "article",
                            "advice",
                            "daily_mission",
                            "quiz",
                            "video",
                            "audio",
                            "book",
                            "challenge"
                        ],
                        "example": "quiz"
                    },
                    "type_display": {
                        "type": "string",
                        "example": "Quiz"
                    },
                    "time_to_finish": {
                        "type": "integer",
                        "example": 30
                    },
                    "time_type": {
                        "type": "string",
                        "enum": [
                            "hours",
                            "days",
                            "weeks",
                            "months"
                        ],
                        "example": "minutes"
                    },
                    "time_type_display": {
                        "type": "string",
                        "example": "Minutes"
                    },
                    "formatted_duration": {
                        "type": "string",
                        "example": "30 Minutes"
                    },
                    "order": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ObjectiveDetailed": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Objective"
                    },
                    {
                        "properties": {
                            "program": {
                                "$ref": "#/components/schemas/Program"
                            },
                            "type_specific_data": {
                                "type": "object",
                                "oneOf": [
                                    {
                                        "$ref": "#/components/schemas/JournalData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ArticleData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AdviceData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/DailyMissionData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/QuizData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/VideoData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/AudioData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/BookData"
                                    },
                                    {
                                        "$ref": "#/components/schemas/ChallengeData"
                                    }
                                ]
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "CreateObjectiveRequest": {
                "required": [
                    "program_id",
                    "name",
                    "type",
                    "time_to_finish",
                    "time_type",
                    "type_specific_data"
                ],
                "properties": {
                    "program_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Complete Module Assessment"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "journal",
                            "article",
                            "advice",
                            "daily_mission",
                            "quiz",
                            "video",
                            "audio",
                            "book",
                            "challenge"
                        ],
                        "example": "quiz"
                    },
                    "time_to_finish": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 30
                    },
                    "time_type": {
                        "type": "string",
                        "enum": [
                            "hours",
                            "days",
                            "weeks",
                            "months"
                        ],
                        "example": "minutes"
                    },
                    "type_specific_data": {
                        "type": "object",
                        "example": {
                            "questions": "array of question IDs"
                        }
                    },
                    "order": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UpdateObjectiveRequest": {
                "properties": {
                    "program_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Updated Module Assessment"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "journal",
                            "article",
                            "advice",
                            "daily_mission",
                            "quiz",
                            "video",
                            "audio",
                            "book",
                            "challenge"
                        ],
                        "example": "quiz"
                    },
                    "time_to_finish": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 45
                    },
                    "time_type": {
                        "type": "string",
                        "enum": [
                            "hours",
                            "days",
                            "weeks",
                            "months"
                        ],
                        "example": "minutes"
                    },
                    "type_specific_data": {
                        "type": "object",
                        "example": {
                            "questions": "array of question IDs"
                        }
                    },
                    "order": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 2
                    }
                },
                "type": "object"
            },
            "ReorderObjectivesRequest": {
                "required": [
                    "objective_orders"
                ],
                "properties": {
                    "objective_orders": {
                        "description": "Array of objective IDs in the desired order",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": "array of objective IDs"
                    }
                },
                "type": "object"
            },
            "JournalData": {
                "required": [
                    "header"
                ],
                "properties": {
                    "header": {
                        "type": "string",
                        "example": "Daily Reflection Journal"
                    }
                },
                "type": "object"
            },
            "ArticleData": {
                "required": [
                    "content"
                ],
                "properties": {
                    "content": {
                        "type": "string",
                        "example": "Article content in HTML or Markdown format..."
                    }
                },
                "type": "object"
            },
            "AdviceData": {
                "required": [
                    "header",
                    "advices"
                ],
                "properties": {
                    "header": {
                        "type": "string",
                        "example": "Best Practices for Success"
                    },
                    "advices": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "array of advice strings"
                    }
                },
                "type": "object"
            },
            "DailyMissionData": {
                "required": [
                    "header",
                    "content"
                ],
                "properties": {
                    "header": {
                        "type": "string",
                        "example": "Today's Challenge"
                    },
                    "content": {
                        "type": "string",
                        "example": "Complete your morning routine and reflect on your goals"
                    }
                },
                "type": "object"
            },
            "QuizData": {
                "required": [
                    "questions"
                ],
                "properties": {
                    "questions": {
                        "description": "Array of question IDs from the question bank",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "example": "array of question IDs"
                    }
                },
                "type": "object"
            },
            "VideoData": {
                "required": [
                    "content_url",
                    "description"
                ],
                "properties": {
                    "content_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://www.youtube.com/watch?v=dQw4w9WgXcQ"
                    },
                    "description": {
                        "type": "string",
                        "example": "Educational video about the topic"
                    }
                },
                "type": "object"
            },
            "AudioData": {
                "required": [
                    "content_url",
                    "description"
                ],
                "properties": {
                    "content_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://soundcloud.com/example/audio-lesson"
                    },
                    "description": {
                        "type": "string",
                        "example": "Audio lesson covering key concepts"
                    }
                },
                "type": "object"
            },
            "BookData": {
                "required": [
                    "content_url",
                    "description"
                ],
                "properties": {
                    "content_url": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/book.pdf"
                    },
                    "cover_image": {
                        "type": "string",
                        "format": "url",
                        "example": "https://example.com/book-cover.jpg"
                    },
                    "description": {
                        "type": "string",
                        "example": "Comprehensive guide to the subject matter"
                    }
                },
                "type": "object"
            },
            "ChallengeData": {
                "required": [
                    "description",
                    "challenges"
                ],
                "properties": {
                    "description": {
                        "type": "string",
                        "example": "30-day improvement challenge"
                    },
                    "challenges": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": "array of challenge strings"
                    }
                },
                "type": "object"
            },
            "ScoreBreakdown": {
                "properties": {
                    "methodology_score": {
                        "type": "number",
                        "format": "float",
                        "example": 82.5,
                        "nullable": true
                    },
                    "pillar_score": {
                        "type": "number",
                        "format": "float",
                        "example": 78,
                        "nullable": true
                    },
                    "module_score": {
                        "type": "number",
                        "format": "float",
                        "example": 85,
                        "nullable": true
                    },
                    "total_possible": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "questions_answered": {
                        "type": "integer",
                        "example": 15
                    },
                    "total_questions": {
                        "type": "integer",
                        "example": 15
                    }
                },
                "type": "object"
            },
            "UpdateProgramRequest": {
                "description": "Request schema for updating a program",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Updated Program Name"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated program description"
                    },
                    "definition": {
                        "type": "string",
                        "example": "Updated program definition"
                    },
                    "objectives": {
                        "type": "string",
                        "example": "Updated program objectives"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Use a bearer token to access this endpoint",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and registration endpoints"
        },
        {
            "name": "Password Management",
            "description": "Password reset and recovery endpoints"
        },
        {
            "name": "Methodologies",
            "description": "Methodology management and navigation endpoints"
        },
        {
            "name": "Questions",
            "description": "Question retrieval endpoints for assessments"
        },
        {
            "name": "User Answers",
            "description": "Submit and retrieve user answers for assessments"
        },
        {
            "name": "Programs",
            "description": "Program management and module linking endpoints"
        },
        {
            "name": "Objectives",
            "description": "Program objectives management endpoints"
        },
        {
            "name": "User Management",
            "description": "User management endpoints (Admin only)"
        }
    ]
}